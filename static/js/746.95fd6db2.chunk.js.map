{"version":3,"file":"static/js/746.95fd6db2.chunk.js","mappings":"uKACA,GAAgB,aAAe,iCAAiC,KAAO,yBAAyB,QAAU,4BAA4B,QAAU,6B,mBCoBhJ,EAlBmB,SAACA,GAClB,OACE,gBAAKC,UAAWC,EAAAA,OAAhB,UACE,SAAC,KAAD,CAASD,UAAWC,EAAAA,QAAWC,GAAE,mBAAcH,EAAMI,IAArD,UACE,iBAAKH,UAAWC,EAAAA,QAAhB,WACE,gBAAKG,IAAKL,EAAMM,OAAQC,IAAI,GAAGN,UAAWC,EAAAA,gBACxC,iBAAKD,UAAU,cAAf,WACE,eAAIA,UAAWC,EAAAA,KAAf,SAAwBF,EAAMQ,QAC9B,gBAAKP,UAAU,UAAf,UAAyB,cAAGA,UAAU,8BAQnD,EClBD,GAAgB,MAAQ,uBAAuB,SAAW,0BAA0B,KAAO,sBAAsB,eAAiB,iCCelI,EAdgB,SAACD,GACf,OACE,gBAAKC,UAAWD,EAAMS,QAAQC,GAAKR,EAAAA,KAASA,EAAAA,MAA5C,UACE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,iBAAKD,UAAWC,EAAAA,eAAhB,WACE,gBAAKD,UAAWC,EAAAA,KAAhB,SAAyBF,EAAMS,QAAQD,QACvC,kBAAOP,UAAU,aAAjB,SAA+BD,EAAMS,QAAQE,WAE/C,uBAAIX,EAAMS,QAAQA,cAIzB,E,uCCNKG,GAAcC,EAAAA,EAAAA,GAAiB,IA+C/BC,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,kBAAjBD,EAXV,SAACf,GACZ,IAAOiB,EAAgBjB,EAAhBiB,aACP,OACE,kBAAMC,OAAO,GAAGC,SAAUF,EAA1B,WACA,SAACG,EAAA,EAAD,CAAOZ,KAAK,OAAOa,UAAWC,EAAAA,EAAUC,SAAU,CAACX,EAAaY,EAAAA,MAC9D,0CAGL,IAKD,EA/CgB,SAAC,GAEX,IADHC,EACE,EADFA,YAAaC,EACX,EADWA,SAAUC,EACrB,EADqBA,QAQlBC,GAPH,EAD8BC,OAQTH,EAASI,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAStB,QAASsB,GAAQA,EAAE3B,GAAhC,KAChC4B,EAAiBL,EAAQG,KAAI,SAAAG,GAAM,OACvC,SAAC,EAAD,CACEzB,KAAMyB,EAAOzB,KACbJ,GAAI6B,EAAO7B,GACXE,OAAQ2B,EAAO3B,QACV2B,EAAO7B,GALyB,IAQzC,OACE,iBAAKH,UAAWC,EAAAA,EAAAA,QAAhB,WACE,gBAAKD,UAAWC,EAAAA,EAAAA,YAAhB,SACG8B,KAEH,4BACE,gBAAK/B,UAAWC,EAAAA,EAAAA,iBAAhB,UACE,SAACY,EAAD,CAAgBK,SAnBF,SAACnB,GACrByB,EAAYzB,EAAMkC,KACnB,MAmBMN,OAIR,E,UCXD,G,SANiCO,E,QAAAA,KAAQC,EAAAA,EAAAA,KAZjB,SAACC,GAAD,MAAU,CAChCX,SAAUW,EAAMC,YAAYZ,SAC5BC,QAASU,EAAMC,YAAYX,QAC3BY,eAAgBF,EAAMC,YAAYC,eAClCV,OAAQQ,EAAMG,KAAKX,OAJG,IAQG,SAACY,GAAD,MAAe,CACxChB,YAAa,SAACS,GAAD,OAASO,GAASC,EAAAA,EAAAA,GAAwBR,GAA1C,EADY,IAIMC,CAE/BQ,G","sources":["webpack://kam-1/./src/components/dialogs/dialogItem/dialogItem.module.css?53be","components/dialogs/dialogItem/DialogItem.js","webpack://kam-1/./src/components/dialogs/message/message.module.css?f3a2","components/dialogs/message/Message.js","components/dialogs/Dialogs.js","components/dialogs/DialogsContainer.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"profilePhoto\":\"dialogItem_profilePhoto__JlYS2\",\"name\":\"dialogItem_name__Q9yiV\",\"navLink\":\"dialogItem_navLink__HK1iP\",\"contact\":\"dialogItem_contact__eo01N\"};","import s from \"./dialogItem.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n  return (\r\n    <div className={s.dialog}>\r\n      <NavLink className={s.navLink} to={`/dialogs/${props.id}`} >\r\n        <div className={s.contact}>\r\n          <img src={props.avatar} alt=\"\" className={s.profilePhoto} />\r\n            <div className=\"msg-preview\">\r\n              <h6 className={s.name}>{props.name}</h6>\r\n              <div className=\"replied\"><i className=\"icon ion-reply\"></i></div>\r\n            </div>\r\n        </div>\r\n      </NavLink>\r\n    </div>\r\n\r\n\r\n)\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"right\":\"message_right__m36s9\",\"chatItem\":\"message_chatItem__1clyx\",\"name\":\"message_name__cQ0p5\",\"chatItemHeader\":\"message_chatItemHeader__3d5h1\"};","import s from \"./message.module.css\"\r\n\r\nconst Message = (props) => {\r\n  return (\r\n    <div className={props.message.me ? s.left : s.right}>\r\n      <div className={s.chatItem}>\r\n        <div className={s.chatItemHeader}>\r\n          <div className={s.name}>{props.message.name}</div>\r\n          <small className=\"text-muted\">{props.message.date}</small>\r\n        </div>\r\n        <p>{props.message.message}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Message","import s from \"./dialogs.module.css\"\r\nimport DialogItem from \"./dialogItem/DialogItem\";\r\nimport Message from \"./message/Message\";\r\nimport {Navigate} from 'react-router-dom';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../common/form-controls/validators\";\r\nimport {Textarea} from \"../common/form-controls/form-contols\";\r\n\r\nconst maxLength20 = maxLengthCreator(20);\r\n\r\nconst Dialogs = (\r\n  {sendMessage, messages, dialogs, isAuth}\r\n) => {\r\n\r\n  // if (isAuth === false) return <Navigate to={'/login'}/>\r\n\r\n  const onSendMessage = (props) => {\r\n    sendMessage(props.text);\r\n  }\r\n  const messageElements = messages.map(m => <Message message={m} key={m.id}/>)\r\n  const dialogElements = dialogs.map(dialog =>\r\n    <DialogItem\r\n      name={dialog.name}\r\n      id={dialog.id}\r\n      avatar={dialog.avatar}\r\n      key={dialog.id}/>)\r\n\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogItems}>\r\n        {dialogElements}\r\n      </div>\r\n      <div>\r\n        <div className={s.sendMessageBlock}>\r\n          <NewMessageForm onSubmit={onSendMessage}  />\r\n        </div>\r\n        {messageElements}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nconst Form = (props) => {\r\n  const {handleSubmit} = props;\r\n  return (\r\n    <form action=\"\" onSubmit={handleSubmit} >\r\n    <Field name=\"text\" component={Textarea} validate={[maxLength20, required]}   />\r\n      <button>Publish</button>\r\n    </form>\r\n  )\r\n}\r\n\r\n\r\nconst NewMessageForm = reduxForm({form: \"newMessageForm\"})(Form)\r\n\r\nexport default Dialogs;","import {addMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport withAuth from \"../HOCs/authHOC\";\r\nimport {compose} from 'redux'\r\n\r\n\r\n// const mapStateToProps2 = (state)=>({\r\n//   isAuth: state.auth.isAuth\r\n// })\r\n\r\n\r\nconst mapStateToProps = (state)=>({\r\n  messages: state.dialogsPage.messages,\r\n  dialogs: state.dialogsPage.dialogs,\r\n  newMessageText: state.dialogsPage.newMessageText,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  sendMessage: (text)=> dispatch(addMessageActionCreator(text)),\r\n})\r\n\r\nconst ComposedDialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps),\r\n  // withAuth\r\n)(Dialogs)\r\n\r\n// const DialogsContainer = (connect(mapStateToProps, mapDispatchToProps)(withAuth(Dialogs)));\r\n// export default DialogsContainer;\r\nexport default ComposedDialogsContainer;"],"names":["props","className","s","to","id","src","avatar","alt","name","message","me","date","maxLength20","maxLengthCreator","NewMessageForm","reduxForm","form","handleSubmit","action","onSubmit","Field","component","Textarea","validate","required","sendMessage","messages","dialogs","messageElements","isAuth","map","m","dialogElements","dialog","text","compose","connect","state","dialogsPage","newMessageText","auth","dispatch","addMessageActionCreator","Dialogs"],"sourceRoot":""}